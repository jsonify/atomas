@use '../variables' as *;
@use '../mixins' as *;

.game-board {
  @include flex-center;
  width: $board-size;
  height: $board-size;
  position: relative;
  margin: 0 auto;

  @include respond-to($breakpoint-sm) {
    width: calc($board-size * 1.2);
    height: calc($board-size * 1.2);
  }

  &__circle {
    width: 100%;
    height: 100%;
    position: relative;
    border: 2px solid rgba($color-primary, 0.3);
    border-radius: 50%;
    @include glass-effect;
  }

  // Center atom positioning
  &__center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: map-get($z-index, 'atom');

    .atom {
      @include keyframe-animation(centerPulse, $animation-speed-slow, ease-in-out, infinite);
    }
  }

  // Atom positions around the circle
  .atom-position {
    position: absolute;
    top: 50%;
    left: 50%;
    width: $atom-size;
    height: $atom-size;
    margin-left: calc($atom-size / -2);
    margin-top: calc($atom-size / -2);

    .atom {
      transform-origin: center;
      @include animate(transform);

      &:hover {
        transform: scale(1.1) translateY(-5px);
      }
    }
  }
}

// Center atom pulse animation
@keyframes centerPulse {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba($color-primary, 0.4);
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 0 20px 10px rgba($color-primary, 0.2);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba($color-primary, 0.4);
  }
}

// Responsive adjustments
@media (max-width: $breakpoint-sm) {
  .game-board {
    width: 100%;
    height: calc(100vw - #{$spacing-unit * 4});
    max-width: $board-size;
    max-height: $board-size;
  }
}